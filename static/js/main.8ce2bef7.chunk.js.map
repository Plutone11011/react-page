{"version":3,"sources":["images/index.png","images/steam.jpg","images/yt.png","header.js","cards/info.js","cards/contacts.js","footer.js","cards/gamereqsAPI.js","cards/experiences.js","cards/alphatube.js","cards/courses.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","backgroundColor","toolbar","minHeight","alignItems","justifyContent","paddingTop","spacing","paddingBottom","typography","flexGrow","textAlign","avatar","width","height","marginRight","BioHeader","classes","AppBar","position","className","Toolbar","Grid","item","xs","sm","container","header","Avatar","alt","src","require","Typography","variant","color","Link","href","fontSize","minWidth","margin","CardInfo","Card","CardContent","gutterBottom","component","title","paddingLeft","paddingRight","CardContacts","List","ListItem","ListItemIcon","ListItemText","primary","Footer","media","CardProjectAPI","CardActionArea","CardMedia","image","CardActions","Button","size","CardExperiences","CardAlphatube","CardCourses","App","projects","direction","md","style","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.8ce2bef7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.0a483f5d.png\";","module.exports = __webpack_public_path__ + \"static/media/steam.a96b6778.jpg\";","module.exports = __webpack_public_path__ + \"static/media/yt.dc4d79c3.png\";","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: 'inherit'\r\n    },\r\n    toolbar: {\r\n      minHeight: 256,\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2)\r\n    },\r\n    typography: {\r\n        flexGrow: 1,\r\n        textAlign: 'center'\r\n    },\r\n    avatar: {\r\n        width: 160,\r\n        height: 160,\r\n        marginRight: 20\r\n    }\r\n  }));\r\n\r\nexport default function BioHeader(){\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <AppBar position=\"static\" className={classes.root}>\r\n            <Toolbar className={classes.toolbar}>\r\n                <Grid item xs={0} sm={2} />\r\n                <Grid container item className={classes.header} xs={12} sm={8}>\r\n                    <Avatar className={classes.avatar} alt=\"Lorenzo Borelli\" src={require('./images/index.png')}/>\r\n                    <Typography variant=\"h2\" color=\"textPrimary\">\r\n                        Lorenzo Borelli\r\n                        <Typography variant=\"h4\" color=\"textSecondary\">\r\n                        23 <Link href=\"https://github.com/Plutone11011\" variant=\"body2\"><GitHubIcon fontSize='large' color=\"primary\" /></Link>\r\n                        </Typography>\r\n                        \r\n                    </Typography>\r\n                    \r\n                </Grid>\r\n                <Grid item xs={0} sm={2} />\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: 275,\r\n      margin: 10\r\n    }\r\n}));\r\n\r\nexport default function CardInfo(){\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography color=\"textPrimary\" variant='h4' gutterBottom>\r\n                About me\r\n                </Typography>\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                Developer with knowledge of Python (Flask, Pandas, Scikit-learn), and some Javascript (React) and C++. Graduated in Bologna in Computer Science. \r\n                Currently interested in all things AI and software development. \r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: 275,\r\n      margin: 10\r\n    },\r\n    title: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16\r\n    }\r\n}));\r\n\r\nexport default function CardContacts(){\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textPrimary\" variant='h4' gutterBottom>\r\n                Contacts\r\n                </Typography>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <EmailIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"lorenzo.borelli27@gmail.com\"/>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <LinkedInIcon/>\r\n                        </ListItemIcon>\r\n                        <Link href=\"https://www.linkedin.com/in/lorenzo-borelli-71355a19b/\" variant=\"body2\"><ListItemText primary=\"https://www.linkedin.com/in/lorenzo-borelli-71355a19b/\"/></Link>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemIcon>\r\n                            <GitHubIcon/>\r\n                        </ListItemIcon>\r\n                        <Link href=\"https://github.com/Plutone11011/GameReqsAPI\" variant=\"body2\"><ListItemText primary=\"https://github.com/Plutone11011\"/></Link>\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}","import React from 'react';\r\nimport CopyrightIcon from '@material-ui/icons/Copyright';\r\n\r\nimport './styles/footer.css';\r\n\r\nexport default function Footer(){\r\n\r\n\r\n\r\n    return (\r\n        <footer className='footer'>Copyright <CopyrightIcon /> 2020 Lorenzo Borelli. All rights reserved.</footer>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    margin: 10,\r\n    width: '100%',\r\n  },\r\n  media: {\r\n    height: 160,\r\n  },\r\n});\r\n\r\nexport default function CardProjectAPI() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={require(\"../images/steam.jpg\")}\r\n          title=\"The project\"\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h4\" component=\"h2\" color=\"textPrimary\">\r\n            GameReqsAPI\r\n          </Typography>\r\n          <Typography variant=\"body1\" color=\"textPrimary\">\r\n          GameReqs API is a RESTful api that provides endpoints to gain informations about games' system requirements.\r\n          Data is scraped from Steam store and stored in an SQLite database.\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Link href=\"https://github.com/Plutone11011/GameReqsAPI\" variant=\"body2\"><Button size=\"small\" color=\"primary\">\r\n            Learn more\r\n            </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: 275,\r\n      margin: 10\r\n    },\r\n    title: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16\r\n    }\r\n}));\r\n\r\nexport default function CardExperiences(){\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textPrimary\" variant='h4' gutterBottom>\r\n                    My Experiences\r\n                </Typography>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Internship at CINECA as web application tester, developing unit tests in Mocha for an enterprise level we application\"/>\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} ","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      margin: 10,\r\n      width: '100%',\r\n    },\r\n    media: {\r\n      height: 160,\r\n    },\r\n});\r\n\r\nexport default function CardAlphatube(){\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n            <CardMedia\r\n                className={classes.media}\r\n                image={require(\"../images/yt.png\")}\r\n                title=\"The project\"\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h4\" component=\"h2\" color=\"textPrimary\">\r\n                    AlphaTube\r\n                </Typography>\r\n                <Typography variant=\"body1\" color=\"textPrimary\">\r\n                Alphatube is a web application that uses YouTube API to build a recommendation system for music videos,\r\n                embedding the videos in the application and allowing the user to watch them. Shows also comments and some info\r\n                gathered through dbpedia datasets.\r\n                </Typography>\r\n                </CardContent>\r\n            </CardActionArea>\r\n                <CardActions>\r\n                    <Link href=\"https://github.com/Plutone11011/Alphatube\" variant=\"body2\"><Button size=\"small\" color=\"primary\">\r\n                        Learn more\r\n                        </Button>\r\n                    </Link>\r\n                </CardActions>\r\n        </Card>\r\n    )\r\n}","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      minWidth: 275,\r\n      margin: 10\r\n    },\r\n    title: {\r\n        paddingLeft: 16,\r\n        paddingRight: 16\r\n    }\r\n}));\r\n\r\nexport default function CardCourses(){\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.title} color=\"textPrimary\" variant='h4' gutterBottom>\r\n                    Courses\r\n                </Typography>\r\n                <List>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Data manipulation with Pandas (Datacamp)\"/>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Merging Dataframes with Pandas (Datacamp)\"/>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Statistical thinking with Python (Datacamp)\"/>\r\n                    </ListItem>\r\n                    <ListItem>\r\n                        <ListItemText primary=\"Supervised Learning with Python (Datacamp)\"/>\r\n                    </ListItem>\r\n                </List>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n} ","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nimport BioHeader from './header';\r\nimport CardInfo from './cards/info';\r\nimport CardContacts from './cards/contacts';\r\nimport Footer from './footer';\r\nimport CardProjectAPI from './cards/gamereqsAPI';\r\nimport CardExperiences from './cards/experiences';\r\nimport CardAlphatube from './cards/alphatube';\r\nimport CardCourses from './cards/courses';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  header: {\r\n    backgroundColor: '#dae3e7',\r\n  },\r\n  App: {\r\n    fontSize: 16\r\n  },\r\n  projects: {\r\n    margin:10,\r\n    backgroundColor: '#dae3e7'\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <div className={classes.App}>\r\n      <Grid container direction='column'>\r\n        <Grid container item className={classes.header}>\r\n            <BioHeader />\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item sm={2} xs={0}/>\r\n          <Grid container sm={8} xs={12}>\r\n            <Grid container item md={6}><CardInfo /></Grid>\r\n            <Grid container item md={6}><CardContacts /></Grid>\r\n          </Grid>\r\n          <Grid item sm={2} xs={0}/>\r\n        </Grid>\r\n        <Grid container>\r\n        <Grid item sm={2} xs={0}/>\r\n          <Grid container sm={8} xs={12}>\r\n            <Grid container md={6}> <CardExperiences /> </Grid>\r\n            <Grid container md={6}> <CardCourses /> </Grid>\r\n          </Grid>\r\n        <Grid item sm={2} xs={0}/>\r\n        </Grid>\r\n        <Grid container>\r\n          <Grid item sm={2} xs={0}/>\r\n          <Grid className={classes.projects} container direction='column' sm={8} xs={12}>\r\n            <Grid container item >\r\n              <Typography style={{'margin': 10}} color=\"textPrimary\" variant='h3'>My Projects</Typography>\r\n            </Grid>\r\n            <Grid container item>\r\n              <Grid container item md={6}><CardProjectAPI/></Grid>\r\n              <Grid container item md={6}></Grid>\r\n            </Grid>\r\n            <Grid container item >\r\n              <Typography style={{'margin': 10}} color=\"textPrimary\" variant='h3'>Academic projects</Typography>\r\n            </Grid>\r\n            <Grid container item>\r\n              <Grid container item sm={6}><CardAlphatube/></Grid>\r\n              <Grid container item sm={6}></Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item sm={2} xs={0}/>\r\n        </Grid>\r\n      </Grid>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}